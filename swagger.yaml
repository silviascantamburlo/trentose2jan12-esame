swagger: "2.0"
info:
  version: 1.0.0
  title: "Astronauts"
  description: Describe status of a astronaut, if he is in the space or not
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: foo@example.com
    url: http://exams.jointresearch.net
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: trentose2jan12-esame12.herokuapp.com
basePath: /
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /astronauts:
    get:
      description: Retrieves astronauts
      operationId: getAstronauts
      parameters:
        - name: id
          in: query
          description: UUID of task
          required: false
          type: string
        - name: firstName
          in: query
          description: first name of astronaut
          required: false
          type: string
        - name: lastName
          in: query
          description: last name of astronaut
          required: false
          type: string
        - name: isInSpace
          in: query
          description: if the astronaut is in the space or no
          required: false
          type: boolean
      responses:
        200:
          description: list of astronauts
          schema:
            type: array
            items:
              $ref: '#/definitions/Astronaut'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Uploads a new astronaut.
      operationId: addAstronaut
      parameters:
        - name: astronaut
          in: body
          description: new astronaut
          required: true
          schema:
            $ref: '#/definitions/NewAstronaut'
      responses:
        201:
          description: astronaut created response
          schema:
            $ref: '#/definitions/Astronaut'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /astronauts/{id}:
    get:
      description: Returns an astronaut
      operationId: findbyastronaut id
      parameters:
        - name: id
          in: path
          description: ID of astronaut to fetch
          required: true
          type: string
          x-example: 'some-example'
      responses:
        200:
          description: OK - astronaut
          schema:
            $ref: '#/definitions/Astronaut'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      description: Updates an existing astronaut, or create a new one with ID.
      operationId: updateAstronaut
      parameters:
        - name: id
          in: path
          description: ID of astronaut to edit or create
          required: true
          type: string
          x-example: 'some-example'
        - name: astronaut
          in: body
          description: astronaut
          required: true
          schema:
            $ref: '#/definitions/Astronaut'
      responses:
        202:
          description: astronaut update response
          schema:
            $ref: '#/definitions/Astronaut'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Astronaut:
    allOf:
      - $ref: '#/definitions/NewAstronaut'
      - required:
        - astronautID
        properties:
          astronautID:
            type: string
          ipAddress:
            type: string
            format: ipv6
          dateUpdated: 
            type: string
            format: date-time
  NewAstronaut:
    required:
      - id
      - firstName
      - lastName
      - isInSpace
    properties:
      id:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      isInSpace:
        type: boolean
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string